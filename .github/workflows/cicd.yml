# name: FastAPI CI/CD

# on: [push, pull_request]

# jobs:

#   flake8:
#     name: Code Quality
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.13.3
#       uses: actions/setup-python@v1
#       with:
#         python-version: 3.13.3
#     - name: Lint with flake8
#       run: |
#         pip install flake8 flake8-html
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         mkdir -p reports/flake8
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
#     - name: Archive flake8 coverage results
#       uses: actions/upload-artifact@v4
#       with:
#         name: flake8-coverage-report
#         path: reports/flake8/

#   pytest:
#     name: Unit Testing
#     needs: flake8
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.13.3
#       uses: actions/setup-python@v1
#       with:
#         python-version: 3.13.3
#     - name: Install dependencies
#       run: |
#         pip install -U pip setuptools wheel
#         pip install pdm
#         pdm install
#     - name: Test with pytest
#       run: |
#         pdm add pytest pytest-cov pytest-html pytest-sugar pytest-json-report
#         pdm run pytest -v --cov --html=reports/pytest/report.html
#     - name: Archive pytest coverage results
#       uses: actions/upload-artifact@v4
#       with:
#         name: pytest-coverage-report
#         path: reports/pytest/

#   security_checks:
#     needs: pytest
#     runs-on: ubuntu-latest
#     name: Security check
#     steps:
#       - uses: actions/checkout@v2
#       - name: Run PyCharm Security
#         uses: tonybaloney/pycharm-security@master
#         with:
#           path: src/
